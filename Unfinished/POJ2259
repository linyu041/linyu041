#include<queue>
#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cstring>
#include<map>
using namespace std;
#define U(i,j,k) for(int i=j;i<=k;++i)
#define D(i,j,k) for(int i=j;i>=k;--i)
queue<int> qgr,g[1005];
map<int,int> m;
char s[17];
int nwo[2005],tot;
int main()
{
	int t;
	int num=0;
	while(scanf("%d",&t)&&t)
	{
		++num;
		printf("Scenario #%d\n",num);
		memset(nwo,0,sizeof(nwo));
		qgr=(queue<int> ());
		tot=0;
		m=(map<int,int> ());
		int n,x;
		U(i,1,t)
		{
			scanf("%d",&n);
			U(j,1,n)
			{
				scanf("%d",&x);
				m[x]=i;
			}
		}
		getchar();
		while(scanf("%s ",s+1)&&s[1]!='S')
		{
			cout<<(s+1)<<" "<<s[1]<<endl;
			if(s[1]=='E')
			{
				if(nwo[m[x]])
				{
					g[m[x]].push(x);
				}
				else
				{
					++tot;
					nwo[m[x]]=tot;
					g[tot].push(x);
					qgr.push(tot);
				}
			}
			else
			{
				int t=qgr.front();
				x=g[t].front();
				printf("%d\n",x);
				g[t].pop();
				if(g[t].empty())	
				{
					nwo[t]=0;
					qgr.pop();
				}
			}
		}
		printf("\n");
	}
	return 0;
}
