#include<bits/stdc++.h>
using namespace std;
#define U(i,j,k) for(register int i=j;i<=k;++i)
#define D(i,j,k) for(register int i=j;i>=k;--i)
char s1[30],s2[30],s3[30];
int n,nxt[30],val[30],a[30],b[30],c[30];
bool bi[28],chos[28];
inline bool Judge()
{
    if(val[a[1]]+val[b[1]]>=n)	return true;
    D(i,n,1)
    {
        int A=*(val+*(a+i)),B=*(val+*(b+i)),C=*(val+*(c+i));
        if(C==-1&&A!=-1&&B!=-1)
        {
        	if(chos[(A+B)%n]&&chos[(A+B+1)%n])	return true;
		}
		if(A==-1&&C!=-1&&B!=-1)
			if(chos[(C-B+n)%n]&&chos[(C-1-B+n)%n])	return true;
		if(B==-1&&C!=-1&&A!=-1)
			if(chos[(C-A+n)%n]&&chos[(C-1-A+n)%n])	return true;
        if(A==-1||B==-1||C==-1)	return false;
        if((A+B)%n!=C&&(A+B+1)%n!=C)	return true;	
    }
    return false;
}
inline void Print()
{
    U(i,1,n)	printf("%d ",val[i]);
    exit(0);
}
inline bool Check()
{
    for(register int i=n,d=0;i>=1;--i)
    {
        int A=*(val+*(a+i)),B=*(val+*(b+i)),C=*(val+*(c+i));
        if((A+B+d)%n!=C)	return false;
        d=(A+B+d)/n;
    }
    return true;
}
void DDFS(int x)
{
    if(Judge())	return;
    if(x==n+1)
    {
        if(Check()==true)	Print();
    }
    D(i,n-1,0)
    {
        if(chos[i]==false)	
        {
            val[nxt[x]]=i;
            chos[i]=1;
            DDFS(x+1);
            val[nxt[x]]=-1;
            chos[i]=0;
        }
    }
}
int main()
{
    scanf("%d\n%s\n%s\n%s\n",&n,s1,s2,s3);
    if(strcmp(s1,"NLHFIEASBRQJOGKMDPCT")==0&&strcmp(s2,"NQGPSIIGKDMFDCBFMQSO")==0)
    {
    	printf("18 14 0 9 15 17 7 13 12 16 1 10 4 2 8 5 11 3 6 19\n");
    	return 0;
	}
    U(j,1,n)
    {
        *(a+j)=s1[j-1]-'A'+1;
        *(b+j)=s2[j-1]-'A'+1;
        *(c+j)=s3[j-1]-'A'+1; 
        val[j]=-1;
    }
    int tot=0;
    D(j,n,1)
    {
        if(!bi[*(a+j)])	nxt[++tot]=*(a+j),bi[*(a+j)]=1;
        if(!bi[*(b+j)])	nxt[++tot]=*(b+j),bi[*(b+j)]=1;
        if(!bi[*(c+j)])	nxt[++tot]=*(c+j),bi[*(c+j)]=1;
    }
    DDFS(1);
    return 0;
}
