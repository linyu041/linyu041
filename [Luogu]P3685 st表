#include<bits/stdc++.h>
using namespace std;
#define U(i,j,k) for(int i=j;i<=k;++i)
#define D(i,j,k) for(int i=j;i>=k;--i)
const int N=100005;
int n,m,a[N],lo[N],st[23][N];
namespace PreSolve
{
	void A()
	{
		lo[1]=1;
		U(i,2,n)	lo[i]=lo[(i>>1)]+1;
		U(i,1,21)
		{
			for(int j=1;j+(1<<i)-1<=n;++j)
			{
				st[i][j]=max(st[i-1][j],st[i-1][j+(1<<(i-1))]);
			}
		}
	};
}
int Query(int L,int R)
{
	int t=lo[R-L+1]-1;
	//cout<<R-L+1<<" "<<t<<" "<<(1<<t)<<endl;
	return max(st[t][L],st[t][R-(1<<t)+1]);
}
int main()
{
	scanf("%d%d",&n,&m);
	U(i,1,n)	scanf("%d",&a[i]),st[0][i]=a[i];
	PreSolve::A();
	int l,r;
	while(m--)
	{
		scanf("%d%d",&l,&r);
		printf("%d\n",Query(l,r));
	}
	return 0;
}
