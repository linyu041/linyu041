#include<bits/stdc++.h>
using namespace std;
#define U(i,j,k) for(int i=j;i<=k;++i)
#define D(i,j,k) for(int i=j;i>=k;--i)
const int N=50005;
int fa[N],n,k;
int la[N],nxt[N<<1],v[N<<1],tot;
inline void AddE(int x,int y)
{
	++tot;v[tot]=y;nxt[tot]=la[x];la[x]=tot;
}
int a[N],dep[N],go[18][N];
void DDFS(int x,int y)
{
	fa[x]=y;dep[x]=dep[y]+1;go[0][x]=y;
	for(int i=1;i<=17;++i)	go[i][x]=go[i-1][go[i-1][x]];
	for(int i=la[x];i;i=nxt[i])
	{
		if(v[i]==y)	continue;
		DDFS(v[i],x);
	}
}
int LCA(int x,int y)
{
	if(dep[x]>dep[y])	swap(x,y);
	for(int i=17;i>=0;--i)
	{
		if(dep[go[i][y]]>=dep[x])
			y=go[i][y];
	}
	if(x==y)	return x;
	for(int i=17;i>=0;--i)
	{
		if(go[i][x]!=go[i][y])
		{
			x=go[i][x];
			y=go[i][y];
		}
	}
	return go[0][x];
}
int ans;
void DDFS2(int x,int y)
{
	for(int i=la[x];i;i=nxt[i])
	{
		if(v[i]==y)	continue;
		DDFS2(v[i],x);
		a[x]+=a[v[i]];
	}
	ans=max(ans,a[x]);
}
int main()
{
	scanf("%d%d",&n,&k);
	int x,y;
	U(i,2,n)
	{
		scanf("%d%d",&x,&y);
		AddE(x,y);AddE(y,x);
	}
	DDFS(1,0);
	fa[1]=1;
	U(i,1,k)
	{
		scanf("%d%d",&x,&y);
		++a[x];++a[y];
		--a[fa[LCA(x,y)]];--a[LCA(x,y)];
	}
	DDFS2(1,0);
	printf("%d\n",ans);
	return 0;
}
